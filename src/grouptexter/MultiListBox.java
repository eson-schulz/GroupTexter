package grouptexter;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author Eson
 */
public class MultiListBox extends javax.swing.JFrame {
    
    public MultiListBox(ArrayList<Group> groups) {
        editing = false;
        this.groups = groups;
        
        for(Group g : groups){
            firstNotificationList.add(g.getName());
        }
        
        initComponents();
        updateLists();
        addMouseListeners();
    }
    
    //b is used to signify the difference between this constructor and the other
    public MultiListBox(ArrayList<Person> people, boolean b){
        editing = false;
        
        for(Person p: people){
            firstNotificationList.add(p.getFullName());
        }
        
        initComponents();
        infoButton.setVisible(false);
                
        updateLists();
        addMouseListeners();
    }
    
    //Constructor for editing a already created Group
    public MultiListBox(ArrayList<Person> everyPerson, ArrayList<Person> selectedPeople){
        editing = true;
        selectedGroup = selectedPeople;
        ArrayList<Person> notSelectedGroup = new ArrayList<>(everyPerson);
        notSelectedGroup.removeAll(selectedPeople);
        
        for(Person p: notSelectedGroup){
            firstNotificationList.add(p.getFullName());
        }
        
        for(Person p: selectedPeople){
            secondNotificationList.add(p.getFullName());
        }
        
        initComponents();
        infoButton.setVisible(false);
                
        updateLists();
        addMouseListeners();
    }
    
    private void addMouseListeners(){
        firstList.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                    addButtonAction();
                }
            }
        });
        secondList.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                    removeButtonAction();
                }
            }
        });
    }
    
    private void updateLists(){
        DefaultListModel listModel = new DefaultListModel();
        for(String group : firstNotificationList){
            listModel.addElement(group);
        }
        firstList.setModel(listModel);
        
        listModel = new DefaultListModel();
        for(String group : secondNotificationList){
            listModel.addElement(group);
        }
        secondList.setModel(listModel);
    }
    
    //Will move the the selectedValue from the first list to the second one
    private void addButtonAction(){
        String selectedItem = (String) firstList.getSelectedValue();
        if(selectedItem != null){
            firstNotificationList.remove(selectedItem);
            secondNotificationList.add(selectedItem);
            updateLists();
        }
    }
    
    //Will move the selectedValue from the second list to the first one
    private void removeButtonAction(){
        String selectedItem = (String) secondList.getSelectedValue();
        if(selectedItem != null){
            secondNotificationList.remove(selectedItem);
            firstNotificationList.add(selectedItem);
            updateLists();
        }
    }
    
    public void resetList(){
        if(editing){
            ArrayList<String> selectedGroupNames = new ArrayList<>();
            for(Person p : selectedGroup){
                selectedGroupNames.add(p.getFullName());
            }
            firstNotificationList.addAll(secondNotificationList);
            firstNotificationList.removeAll(selectedGroupNames);
            
            secondNotificationList = selectedGroupNames;
        }
        else{
            firstNotificationList.addAll(secondNotificationList);
            secondNotificationList = new ArrayList();
        }
    }
    
    public ArrayList<String> getSecondNotificationList(){
        return secondNotificationList;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstScrollPane = new javax.swing.JScrollPane();
        firstList = new javax.swing.JList();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        addAllButton = new javax.swing.JButton();
        removeAllButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        firstScrollPane1 = new javax.swing.JScrollPane();
        secondList = new javax.swing.JList();
        cancelButton = new javax.swing.JButton();
        infoButton = new javax.swing.JButton();

        setTitle("Selection");
        setResizable(false);

        firstList.setVisibleRowCount(9);
        firstScrollPane.setViewportView(firstList);

        addButton.setText("Add >");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setText("< Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        addAllButton.setText("Add All >>");
        addAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAllButtonActionPerformed(evt);
            }
        });

        removeAllButton.setText("<< Remove All");
        removeAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAllButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Available");

        jLabel2.setText("Choosen");

        secondList.setVisibleRowCount(9);
        firstScrollPane1.setViewportView(secondList);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        infoButton.setText("Info");
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(firstScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(removeAllButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(infoButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(105, 110, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addAllButton, addButton, removeAllButton, removeButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton)
                        .addGap(27, 27, 27)
                        .addComponent(addAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeAllButton))
                    .addComponent(firstScrollPane)
                    .addComponent(firstScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton)
                    .addComponent(infoButton))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {firstScrollPane, firstScrollPane1});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addAllButton, addButton, removeAllButton, removeButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        addButtonAction();
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        removeButtonAction();
    }//GEN-LAST:event_removeButtonActionPerformed

    private void addAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAllButtonActionPerformed
        secondNotificationList.addAll(firstNotificationList);
        firstNotificationList = new ArrayList();
        updateLists();
    }//GEN-LAST:event_addAllButtonActionPerformed

    private void removeAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAllButtonActionPerformed
        firstNotificationList.addAll(secondNotificationList);
        secondNotificationList = new ArrayList();
        updateLists();
    }//GEN-LAST:event_removeAllButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        resetList();
        this.setVisible(false);
        updateLists();
    }//GEN-LAST:event_cancelButtonActionPerformed

    //Button to see who is in a group, not visible for the person MultiListTextBox
    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
        if(firstList.getSelectedValue() != null){
            for(Group g : groups){
                if(g.getName().equals((String) firstList.getSelectedValue())){
                    GroupInfo info = new GroupInfo(g);
                    info.setBounds(this.getX() + 50, this.getY() + 50, info.getWidth(), info.getHeight());
                    return;
                }
            }
        }
        else if(secondList.getSelectedValue() != null){
            for(Group g : groups){
                if(g.getName().equals((String) secondList.getSelectedValue())){
                    GroupInfo info = new GroupInfo(g);
                    info.setBounds(this.getX() + 50, this.getY() + 50, info.getWidth(), info.getHeight());
                    return;
                }
            }
        }
    }//GEN-LAST:event_infoButtonActionPerformed
    
    //The arraylist for groups/people on the left side
    private ArrayList<String> firstNotificationList = new ArrayList<>();
    
    //The arraylist for selected groups/people on the right side
    private ArrayList<String> secondNotificationList = new ArrayList<>();
    
    private ArrayList<Group> groups;
    private boolean editing;
    private ArrayList<Person> selectedGroup;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAllButton;
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JList firstList;
    private javax.swing.JScrollPane firstScrollPane;
    private javax.swing.JScrollPane firstScrollPane1;
    private javax.swing.JButton infoButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton okButton;
    private javax.swing.JButton removeAllButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JList secondList;
    // End of variables declaration//GEN-END:variables
}
